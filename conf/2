
user root;
worker_processes  1;
#worker_processes  auto;
#worker_cpu_affinity auto;

error_log  logs/error.log;
pid        logs/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
  
    include geoip2.conf;
    include nginx_cache.conf; 

    log_format  main  '{ '
        '"time_local": "$time_local",'
        '"remote_addr":"$remote_addr",'
        '"remote_port":"$remote_port",'
        '"remote_user": "$remote_user",'
        '"request_method": "$request_method",'
        '"request_time": "$request_time",'
        '"request" : "$request",'
        '"request_uri" : "$request_uri",'
        '"request_length" : "$request_length",'
        '"request_body": "$request_body",'
        '"status": "$status",'
        '"body_bytes_sent": "$body_bytes_sent",'
        '"bytes_sent": "$bytes_sent",'
        '"http_referer": "$http_referer",'
        '"http_user_agent": "$http_user_agent",'
        '"arg_aaa": "$arg_aaa",'
        '"args": "$args",'
        '"http_user_agent": "$http_user_agent",'
        '"http_x_forwarded_for": "$http_x_forwarded_for",'
        '"hostname": "$hostname",'
        '"server_name": "$server_name",'
        '"server_port": "$server_port",'
        '"server_addr": "$server_addr",'
        '"scheme": "$scheme",'
        '"http_cookie": "$http_cookie",'
        '"cookie_key1": "$cookie_key1",'
        '"sent_http_ETag": "$sent_http_ETag",'
        '"realip_remote_addr": "$realip_remote_addr",'
        '"server_protocol": "$server_protocol",'
        '"uri": "$uri",'
        '"nginx_version": "$nginx_version",'
        '"pid": "$pid",'
        '"connection_requests": "$connection_requests",'
        '"upstream_addr": "$upstream_addr",'
        '"upstream_response_time": "$upstream_response_time",'
        '"upstream_status": "$upstream_status",'
#'"proxy_add_x_forwarded_for": "$proxy_add_x_forwarded_for",'

        '"geoip2_data_country_code": "$geoip2_data_country_code",'
        '"geoip2_data_country_name": "$geoip2_data_country_name",'
        '"geoip2_data_city_name": "$geoip2_data_city_name",'

        '"document_uri": "$document_uri"'
        '}';
    access_log  logs/access.log  main;

    sendfile        on; 
    keepalive_timeout  65; 

    #tcp_nopush     on; 
    #gzip  on; 

#add lua shared mem
    lua_shared_dict ngx_cache 128m; #cache 
    lua_shared_dict cache_lock 100k; # lock for cache

    upstream backend {
#hash $http_user_agent;
#       least_conn
        sticky;
#ip_hash; #hash by ip first 3 bytes 
        server 192.168.137.138; 
        server 192.168.137.201:8080; 
        server 192.168.137.138:8080; #exist
#server 192.168.137.138 backup;
#server 192.168.137.201:9898 max_fails=0 fail_timeout=10s weight=5 max_conns=2;
    }   

    upstream backend-next {
        server 192.168.137.138; 
        server 192.168.137.201:8080; 
        server 192.168.137.138:8080; #exist
#server 192.168.137.138 backup;
#server 192.168.137.201:9898 max_fails=0 fail_timeout=10s weight=5 max_conns=2;
    }   

    server {
        listen 5656;

#if ($geoip2_data_country_code != CN ) {
#            return 403;
#        }

        location / { 
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

# $remote_addr when pass cdn
            set_real_ip_from  192.168.137.201;
            set_real_ip_from 127.0.0.1;
            real_ip_header    X-Forwarded-For;
            real_ip_recursive on;

            proxy_pass http://backend;
        }   
    }

    server {
        listen 5657;
        server_name test_aaa;

        proxy_set_header AB 'ab';

        location / { 
#proxy_pass_request_body off;
#proxy_pass_request_headers off;

            proxy_set_header HOST '123456';
            proxy_set_body 'bodyaabbcc';

            proxy_pass http://backend;
        }   

        location /abc { 
#proxy_set_header AB 'newab';
            proxy_set_header A 'newA';
            proxy_pass http://backend;
        }   

    }

    server {
        listen 5658;
        server_name test;

#        proxy_connect_timeout 3s;
#proxy_read_timeout 3s;
#        proxy_send_timeout 3s;


        location /next_upstream { 
            proxy_next_upstream http_404;
            proxy_next_upstream_tries 1;
            proxy_next_upstream_timeout 3s;
            proxy_pass http://backend-next/aaa.html;
        }   
    }

    ldap_server testldap {
#url ldap://192.168.137.1:389/dc=micmiu,dc=com?uid?sub?(&(objectClass=*));
        url ldap://192.168.137.1:389/dc=micmiu,dc=com?uid?sub?(objectClass=*);
        binddn "uid=Miumiu,ou=Tester,dc=micmiu,dc=com";
        binddn_passwd "111111";
        group_attribute memberuid;
        group_attribute_is_dn on;
        require valid_user;
    }

    server {
        listen 8000;
        server_name testldap_server;
        location / {
            root html;
            index index.html index.htm;
           
#satisfy  auth_ldap || allow subnet 
            satisfy any;
                
            auth_ldap "Forbidden";
            auth_ldap_servers testldap;

            allow 192.168.137.201;


        }
    }

    server {
        listen       80;
        server_name  localhost;
        error_page   500 502 503 504  /50x.html;

        lua_code_cache off;  
        #used for debug lua, no need reload nginx when lua file mod.

        location / {
            root   html;
            index  index.html index.htm;
        }

        location = /50x.html {
            root   html;
        }

#lua content 
        location /lua {
            set $test "hello, world.";
            content_by_lua '
                ngx.header.content_type = "text/plain";
                ngx.say(ngx.var.test);
            ';
        }

#lua file 
        location /lua2 {
            content_by_lua_file conf/lua/hello.lua;
        }

#redis
        location /redis_test{
            content_by_lua_file conf/lua/redis_test.lua;
        }

#mysql
        location /mysql_test {
            content_by_lua_file conf/lua/mysql_test.lua;
        }

        location /capture {
            content_by_lua_file conf/lua/capture.lua;
        }

        location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

        location /cache {
            content_by_lua_file conf/lua/cache.lua;
        }
        
        location /cache_lock {
            content_by_lua_file conf/lua/cache_lock.lua;
        }

        location = /lock {
            content_by_lua_file conf/lua/lock.lua;
        }

        location = /allow {
            allow 192.168.137.201;
            deny 192.168.137.1;
#deny all;
        }
 
        location = /auth.html {
            auth_basic " Nginx Basic auth";
            auth_basic_user_file htpasswd; 
        }
    }
}

stream {

    include geoip2_stream.conf;

    upstream mysqls {
        hash $remote_addr consistent;
        server 192.168.137.101:3306 weight=5 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 9945;
        proxy_connect_timeout 1s;
        proxy_timeout 3s;
        proxy_pass mysqls;
    }
}

